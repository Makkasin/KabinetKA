Процедура УстановитьПараметры(Схема,Настройки)
	
	Эл = Настройки.ПараметрыДанных.Элементы.Найти("Дата1");
	Эл.Использование = Истина;
	Эл.Значение = НачалоДня(Дт);
	//
	
	Эл = Настройки.ПараметрыДанных.Элементы.Найти("Дата2");
	Эл.Использование = Истина;
	Эл.Значение = КонецДня(Дт1)+1;
	//
	Эл = Настройки.ПараметрыДанных.Элементы.Найти("КА");
	Эл.Использование = Истина;
	Эл.Значение = Контрагент;
	                                                                                     
	Эл = Настройки.ПараметрыДанных.Элементы.Найти("БезКА");
	Эл.Использование = Истина;
	Эл.Значение = НЕ ЗначениеЗаполнено(Контрагент);   
	
КонецПроцедуры

Процедура ЗаполнитьСтруктуруГруппировок(ТекСпкГрупп,ТекГрп,ЭтоТаблицаСкд)
	
	Для каждого Эл из ТекСпкГрупп Цикл
		Если Эл.Пометка = Ложь Тогда Продолжить; КонецЕсли;
		
		Если ТипЗнч(ЭтоТаблицаСкд) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") ТОгда //для колонок, чтобы каждая колонка была в отдельной группе
			ТекГрп = ЭтоТаблицаСкд.Добавить();
		ИначеЕсли ТипЗнч(ТекГрп) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") ТОгда
			ТекГрп = ТекГрп.Добавить();
		ИначеЕсли ЭтоТаблицаСкд ТОгда
			ТекГрп = ТекГрп.Структура.Добавить();
		ИНаче
			ТекГрп = ТекГрп.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		КонецЕСЛИ;
		СкопироватьГруппировку(ТекГрп,эл.значение);
		ТекГрп.Использование = Истина; 
		
		Если ТипЗнч(ЭтоТаблицаСкд) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") ТОгда //для колонок
			УстановитьПараметрКомпоновкиДанных(ТекГрп);  
		КонецесЛИ;
		
	КонецЦикла;    
	
	Если ТипЗнч(ЭтоТаблицаСкд) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") ТОгда //для колонок добавим общий итог
		ТекГрп = ЭтоТаблицаСкд.Добавить();  
		СкопироватьГруппировку(ТекГрп,ТекСпкГрупп[0].значение); 
		ТекГрп.ПоляГруппировки.Элементы[0].Поле = Новый ПолеКомпоновкиДанных("ИтогоСлужебный");
		ТекГрп.Использование = Истина; 
		УстановитьПараметрКомпоновкиДанных(ТекГрп);  
	КонецесЛИ;  
		
КонецПроцедуры

Функция Данные(АдресРасшифровкиДанных,АдресСКД,идФормы,вывестивТбл=Ложь) Экспорт

	
	Схема = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");  
	
	Если СпкГрупп.Количество()=0 Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.ВариантыНастроек.Найти("Детализация").Настройки);  
	КонецесЛИ;
    
	Настройки = КомпоновщикНастроек.Настройки;
	
	УстановитьПараметры(Схема,Настройки);
	
	Если СпкГрупп.Количество()<>0 Тогда
		//Порядок Группировок
		ЭтоТаблицаСкд = ложь;
		ТекГрп = Настройки;
		текГрпКол = Неопределено;
		Если ТипЗнч(ТекГрп.Структура[0]) = ТИп("ТаблицаКомпоновкиДанных") ТОгда 
			ТекГрп = ТекГрп.Структура[0].Строки;
			текГрпКол = Настройки.Структура[0].Колонки;
			ЭтоТаблицаСКД = Истина;
			
			ТекГрп.Очистить();
			текГрпКол.Очистить();
		ИНаче
			ТекГрп.Структура.Очистить();
		КонецЕСЛИ;	
		ЗаполнитьСтруктуруГруппировок(СпкГрупп,  ТекГрп,   ЭтоТаблицаСкд);
		ЗаполнитьСтруктуруГруппировок(СпкКолонки,Неопределено,текГрпКол);
	КонецесЛИ;
		
	
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	
	Если вывестивТбл Тогда
		Макет = КомпоновщикМакета.Выполнить(Схема,Настройки,ДанныеРасшифровки,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"),Ложь);
		ПроцессорКомпоновки.Инициализировать(Макет,,ДанныеРасшифровки,истина,Ложь);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;   
		таб = ПроцессорВывода.Вывести(ПроцессорКомпоновки); 
		
	Иначе
		Макет = КомпоновщикМакета.Выполнить(Схема,Настройки,ДанныеРасшифровки,ПолучитьМакет("МакетОформления"),,Ложь);
		ПроцессорКомпоновки.Инициализировать(Макет,,ДанныеРасшифровки,истина,Ложь);  
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		Таб = Новый ТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(Таб);
		ПроцессорВывода.Вывести(ПроцессорКомпоновки);
		
		АдресРасшифровкиДанных = ПоместитьВоВременноеХранилище(ДанныеРасшифровки,идФормы);
		АдресСКД = ПоместитьВоВременноеХранилище(Схема,идФормы);  
		
	КонецЕсли;                                                   
	
	Возврат Таб;
	
КонецФункции

Процедура УстановитьПараметрКомпоновкиДанных(Грп)
	
	Пар = Новый ПараметрКомпоновкиДанных("РасположениеОбщихИтогов");
	Эл = Грп.ПараметрыВывода.Элементы.Найти(Пар);
	Если Эл = Неопределено ТОгда
		ВозвраТ;
	КонецесЛИ;   
	Эл.Значение = РасположениеИтоговКомпоновкиДанных.Нет;
	Эл.Использование = Истина;
	
Конецпроцедуры

Процедура СкопироватьГруппировку(НовГрп,Грп) Экспорт
	
	ЗаполнитьЗначенияСвойств(НовГрп,Грп);
	
	ДЛя каждого эл из Грп.Выбор.Элементы Цикл
		НовЭл = НовГрп.Выбор.Элементы.Добавить(ТипЗнч(Эл));
		ЗаполнитьЗначенияСвойств(НовЭл,Эл);
	КонецЦикла;
	
	Для каждого эл из Грп.ПараметрыВывода.Элементы Цикл
		НовЭл = НовГрп.ПараметрыВывода.Элементы.Найти(СокрЛП(Эл.Параметр));
		Если новЭл<>Неопределено Тогда
			ЗаполнитьЗначенияСвойств(НовЭл,Эл);
		КонецеСлИ;
	Конеццикла;
	
	ДЛя каждого эл из Грп.Порядок.Элементы Цикл
		НовЭл = НовГрп.Порядок.Элементы.Добавить(ТипЗнч(Эл));
		ЗаполнитьЗначенияСвойств(НовЭл,Эл);
	КонецЦикла;
	
	ДЛя каждого эл из Грп.ПоляГруппировки.Элементы Цикл
		НовЭл = НовГрп.ПоляГруппировки.Элементы.Добавить(ТипЗнч(Эл));
		ЗаполнитьЗначенияСвойств(НовЭл,Эл);
	КонецЦикла;
	
	ДЛя каждого эл из Грп.Отбор.Элементы Цикл
		НовЭл = НовГрп.Отбор.Элементы.Добавить(ТипЗнч(Эл));
		ЗаполнитьЗначенияСвойств(НовЭл,Эл);
	КонецЦикла;
	
КонецПроцедуры

