Функция ПолучитьСписокКАНаСервере()
	
	Стк = Новый Структура("ИНН",Объект.ИНН);
	
	тбл = глОбщий.ДанныеАПИ("KAINN",Стк);
	
	спк = Новый СписокЗначений;
	Для каждого Стр из тбл Цикл
		Спк.Добавить(Стр.идКА,Стр.Наименование);
	КонецЦикла;                                 
	
	Возврат Спк;
	
	
КонецФункции
	
	
&НаКлиенте
Процедура ПолучитьСписокКА()   
	
	Спк = ПолучитьСписокКАНаСервере();
	Если Спк.Количество() = 0 ТОгда
		ПоказатьПредупреждение(,"Контрагент с ИНН "+Объект.ИНН+" в подсистеме Бухгалтерия не найден");
		возврат ;
	КонецесЛИ;  
	
	оо = Новый ОписаниеОповещения("ПослеВыбораИзсписка",ЭтотОбъект);
	ПоказатьВыборИзМеню(оо,спк);
	
КонецПроцедуры   

&НаКлиенте
Процедура ПослеВыбораИзсписка(Рез,Пар) Экспорт
	Если рез = Неопределено Тогда Возврат; КонецеслИ;
	
	Объект.идКонтрагента = рез.Значение;
	Объект.имяКонтрагента = Рез.Представление;
	
	
КонецПроцедуры

	 
&НаКлиенте
Процедура имяКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ПолучитьСписокКА();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	   элементы.Зарегистрировать.Видимость = Объект.Зарегистрирован = Ложь; 
	   Если ОБъект.Зарегистрирован ТОгда
		   ЭтаФорма.ТолькоПросмотр = Истина;
	   КонецесЛИ;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	Если Объект.Зарегистрирован = Ложь Тогда Возврат; КонецеслИ;
	
	Если ЗначениеЗаполнено(Объект.идКонтрагента)=Ложь Тогда
		Сообщить("Не заполнен контрагент!");
		отказ = Истина;
	КонецеслИ; 
	
КонецПроцедуры

&НаКлиенте
Процедура Зарегистрировать(Команда)
	// Вставить содержимое обработчика. 
	
	Стк = Новый Структура();
	Стк.Вставить("Код",Объект.ИНН);
	Стк.Вставить("Наименование",Объект.имяКонтрагента);
	Стк.Вставить("емайл",Объект.емайл);
	Стк.Вставить("Телефон",Объект.Телефон);
	Стк.Вставить("КонтактноеЛицо",Объект.КонтактноеЛицо);
	
	
	резЗаписи = Ложь;
	Попытка
		ссКА = ЗаписатьКонтрагента(объект.идКонтрагента,Стк);
		если ссКА = Неопределено ТОгда 
			Сообщить("Уже есть такой контрагент в базе!");
			ВозвраТ;
		Иначе
			объект.Контрагент = ссКА;  
		КонецесЛИ;
		
		объект.Зарегистрирован = Истина;    
		объект.Состояние = ПредопределенноеЗначение("Перечисление.Состояния.Зарегистрирован");
		резЗаписи = ЭтаФорма.Записать(Новый Структура("РежимЗаписи",РежимЗаписиДокумента.Проведение));  
		
		ОтправитьСообщениеОРегистрации(ссКА);
		
	исключение   
		Сообщить(ОписаниеОшибки());
	КонецПопытки;   
	
	Если резЗаписи = Ложь Тогда
		объект.Зарегистрирован = Ложь;
	ИНаче
		ЭтаФорма.Закрыть();
	КонецеслИ;
	
	
КонецПроцедуры    

&НаСервереБезКонтекста
Процедура ОтправитьСообщениеОРегистрации(ссКА)
	
	Документы.ЗаявкиНаРегистрацию.ОтправитьСообщениеОРегистрации(ссКА);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаписатьКонтрагента(идКонтрагента,Стк)
	
	сс = Справочники.Контрагенты.ПолучитьСсылку(идКонтрагента);
	Если стрНайти(сокрлП(сс),"не найден")<> 0 Тогда
		Обк = Справочники.Контрагенты.СоздатьЭлемент();
		обк.УстановитьСсылкуНового(сс);  
		ЗаполнитьЗначенияСвойств(Обк,Стк);  
		
		генаПаролей = Новый ГенераторСлучайныхПаролей();
		обк.Пароль = генаПаролей.СлучайныйПароль(8,Ложь);
		обк.записать();  
		сс = обк.ссылка;
	ИНаче
		Возврат Неопределено;
	КонецеслИ;   
	
	Возврат сс;
	
	
КонецФункции

                                                   